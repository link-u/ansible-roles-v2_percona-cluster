---
# defaults/main.yml (percona-cluster)
# Prefix : pxc

### インストール設定 ###############################################################################
## 基本設定
pxc_install_flag: True  # インストールフラグ
pxc_version: "{{ percona_cluster_version | default(57) }}"
pxc_package_name: "{{ percona_cluster_package_name | default('percona-release_latest.generic_all.deb') }}"
pxc_mycnf_path: "{{ percona_cluster_mycnf_path | default('/etc/mysql/my.cnf') }}"
pxc_root_password: "{{ percona_cluster_root_password | default('default&root&password') }}"
pxc_pid_file: "{{ percona_cluster_pid_file | default('/var/run/mysqld/mysqld.pid') }}"
pxc_socket: "{{ percona_cluster_socket | default('/var/run/mysqld/mysqld.sock') }}"

## クラスタ設定
pxc_name: "{{ percona_cluster_name | default('link-u_pxc') }}"
pxc_sst_user: "{{ percona_cluster_sst_user | default('pxc_sst_user') }}"
pxc_sst_password: "{{ percona_cluster_sst_password | default('default&sst&password') }}"
pxc_hosts: "{{ percona_cluster_hosts | default( (group_names | map('extract', groups) | list)[0] ) }}"
pxc_host_ips: "{{ percona_cluster_host_ips | default( pxc_hosts | map('extract', hostvars, 'local_ipv4') | list ) }}"
pxc_is_clustered: "{{ percona_cluster_is_clustered | default( (pxc_hosts | length) > 1 ) }}"

## DB 操作ノード
### デフォルでの指定ノードについて
#### 1. クラスタ稼働の場合はプレイ対象リストにおける最初のホストを指定
#### 2. スタンドアロン稼働の場合は ansible 実行対象のホストを指定
pxc_db_control_node: "{% if pxc_is_clustered %}{{ ansible_play_hosts_all[0] }}{% else %}{{ inventory_hostname }}{% endif %}"

## NUMA環境下のメモリ割り当て改善設定
### innodb_numa_interleaveとflush_cachesの設定値に使用する
pxc_enable_innodb_numa_interleave: >-
  {{ percona_cluster_enable_innodb_numa_interleave |
     default( (ansible_processor_count >= 2) | ternary('ON', 'OFF') ) }}


### 追加設定 #######################################################################################
## 作成する mysql ユーザリスト
pxc_users: "{{ percona_cluster_users | default([]) }}"
### 作成例
# pxc_users:
#   - name: "foo"           # ユーザ名 (必須)
#     password: "foofoo"    # パスワード (省略時は name と同じ値)
#     priv: "*.*:ALL,GRANT" # ユーザの権限 (省略時は '*.*:ALL,GRANT')
#     hosts:                # 接続できるホスト名リスト (省略はできるが, ユーザ作成タスクは走らない)
#       - "127.0.0.1"
#       - "::1"
#       - "localhost"
#
#   - name: "bar"           # ユーザ名.  パスワードは省略
#     priv: "*.*:SELECT"    # ユーザの権限
#     hosts:                # 接続できるホスト名リスト
#       - "localhost"


## 作成する mysql DB リスト
pxc_databases: "{{ percona_cluster_databases | default([]) }}"
### 作成例
# pxc_databases:
#   - name: somedb                   # DB 名 (必須)
#     encoding: utf8mb4              # DB の文字コード (省略時は "utf8" )
#     collation: utf8mb4_general_ci  # 照合モード (省略時は "" ※ 空文字)
#     login_user: root               # DB 作成時のログインユーザ (省略時は root)
#     login_password: password       # DB 作成時のログインパスワード (省略時は "{{ pxc_root_password }}")
#
#   - name: testdb                   # DB 名以外省省略した場合


### cnf ファイル 設定 ##############################################################################
## clustering_settings
__pxc_defaults_clustering_settings:
  wsrep_provider: "{{ pxc_is_clustered | ternary('/usr/lib/libgalera_smm.so', 'none') }}"
  wsrep_cluster_address: "gcomm://{{ pxc_host_ips | join(',') }}"
  wsrep_cluster_name: "{{ pxc_name }}"
  wsrep_log_conflicts: 1
  wsrep_node_address: "{{ local_ipv4 }}"
  wsrep_node_name: "{{ inventory_hostname }}"
  wsrep_slave_threads: "{{ ansible_processor_cores * ansible_processor_count}}"  # 目安はCPUコアx2だがちょっと多いので減らす
  wsrep_sst_method: xtrabackup-v2
  wsrep_sst_auth: '"{{ pxc_sst_user }}:{{ pxc_sst_password }}"'
  wsrep_data_home_dir: /var/lib/mysql
  wsrep_provider_options: "'gcache.dir = /var/lib/mysql'"
  server-id: "{{ pxc_hosts.index(inventory_hostname) }}"
pxc_clustering_settings: "{{ percona_cluster_clustering_settings | default({}) }}"
__pxc_combined_clustering_settings: "{{ __pxc_defaults_clustering_settings | combine(pxc_clustering_settings, recursive=True) }}"

## mycnf_settings
__pxc_defaults_mycnf_settings:
  user: mysql
  port: 3306
  character-set-server: utf8mb4
  collation-server: utf8mb4_general_ci
  default-authentication-plugin: "mysql_native_password"
  plugin-load-add: "auth_socket.so"
  ignore-db-dir: ["mysql-bin", "lost+found"]  # ignore-db-dir の設定 (リストで指定)
  datadir: /var/lib/mysql
  log-bin: /var/lib/mysql/mysql-bin
  log-error: /var/log/mysql/error.log
  socket: "{{ pxc_socket }}"
  table_open_cache_instances: "{{ ansible_processor_cores * ansible_processor_count * 2 }}"  # コア数×2
  thread_handling: one-thread-per-connection # perconaのウリである pool-of-threads を指定したいが、謎のメモリリーク問題により断念
  pid-file: "{{ pxc_pid_file }}"
  open_files_limit: 100000
  log_slave_updates: 1
  skip_character_set_client_handshake: 1
  skip_external_locking: 1
  skip_name_resolve: 1
  symbolic-links: 0
  performance_schema: "OFF"
  table_open_cache: "{{ ansible_processor_cores * ansible_processor_count * 5000 }}"  # 目安はコア数x5000
  binlog_format: ROW
  default_storage_engine: InnoDB
  pxc_strict_mode: ENFORCING
  innodb_autoinc_lock_mode: 2
  innodb_buffer_pool_instances: "{{ [(ansible_processor_cores * ansible_processor_count * 2), 64] | min }}" # コア数の2倍か64の小さい方
  innodb-checksum-algorithm: strict_crc32
  innodb_flush_method: O_DIRECT_NO_FSYNC
  innodb_log_buffer_size: 32M  # 16-128MB
  innodb_log_file_size: 128M
  innodb_log_files_in_group: "{{ ansible_processor_cores * ansible_processor_count }}"  # コア数
  innodb_log_group_home_dir: /var/lib/mysql
  innodb_numa_interleave: "{{ pxc_enable_innodb_numa_interleave }}"
  innodb_page_cleaners: "{{ [(ansible_processor_cores * ansible_processor_count), 32] | min }}"    # コア数か32の小さい方
  innodb_purge_threads: "{{ [(ansible_processor_cores * ansible_processor_count), 32] | min }}"    # コア数か32の小さい方
  innodb_read_io_threads: "{{ [(ansible_processor_cores * ansible_processor_count), 32] | min }}"  # コア数か32の小さい方
  innodb_write_io_threads: "{{ [(ansible_processor_cores * ansible_processor_count), 32] | min }}" # コア数か32の小さい方
pxc_mycnf_settings: "{{ percona_cluster_mycnf_settings | default({}) }}"
__pxc_combined_mycnf_settings: "{{ __pxc_defaults_mycnf_settings | combine(pxc_mycnf_settings, recursive=True) }}"

## general_settings
### SET GLOBALが可能なものは出来るだけこちらへ
### SET GLOBALは単位にMとか使えないので`max_heap_table_size`などを参考にして下さい。
__pxc_defaults_general_settings:
  innodb_adaptive_hash_index: "OFF"
  innodb_flush_log_at_trx_commit: 0
  innodb_flush_neighbors: 0
  innodb_io_capacity: 2000  # NVMeでなければ2000ぐらいでよい
  innodb_io_capacity_max: 4000 # innodb_io_capacity の2倍
  innodb_lru_scan_depth: 1024  # NVMeでなけれ1024でよい
  #innodb_page_size: 4k  # clusterのバグによりデフォルトの16kしか指定できない
  innodb_random_read_ahead: "OFF"
  innodb_read_ahead_threshold: 0
  innodb_compression_level: 6
  innodb_parallel_doublewrite_path: xb_doublewrite # ダブルライトバッファのパスを変更する
  ## メモリの5割くらい、chunk_size(128MB) * instances の倍数でしか変更できない
  innodb_buffer_pool_size: "{{ ((((ansible_memtotal_mb * 1024 * 1024 * 0.5) / (128 * 1024 * 1024 * __pxc_combined_mycnf_settings.innodb_buffer_pool_instances|int))|round(0, 'ceil')) * 128 * 1024 * 1024 * __pxc_combined_mycnf_settings.innodb_buffer_pool_instances|int)|int }}"
  expire_logs_days: 3
  explicit_defaults_for_timestamp: "ON"
  long_query_time: 0.1
  log_timestamps: SYSTEM
  max_connections: "{{ ([(ansible_processor_cores * ansible_processor_count * 200), 100000] | min) }}"  # 目安はコア数x200 (ただし最大値は 100000 でキャップ)
  query_cache_limit: 0
  query_cache_size: 0
  slow_query_log: "ON"
  slow_query_log_file: /var/log/mysql/mysql-slow.log
  thread_cache_size: "{{ [(ansible_processor_cores * ansible_processor_count * 100), 16384] | min }}"  # 目安はコア数x100 (ただし最大値は 16384 でキャップ)
  default_password_lifetime: 0
  max_prepared_stmt_count: 1000000
  ## 以下は本番サーバー（メモリ16GB以上）と開発サーバー（メモリ16GB未満）で推奨値を分ける
  max_heap_table_size: "{% if ansible_memtotal_mb >= 16 * 1024 %}{{ 128 * 1024 * 1024 }}{% else %}{{ 16 * 1024 * 1024 }}{% endif %}" # 128MB or 16MB
  tmp_table_size: "{% if ansible_memtotal_mb >= 16 * 1024 %}{{ 128 * 1024 * 1024 }}{% else %}{{ 16 * 1024 * 1024 }}{% endif %}"      # 128MB or 16MB
  read_buffer_size: "{% if ansible_memtotal_mb >= 16 * 1024 %}{{ 4 * 1024 * 1024 }}{% else %}{{ 128 * 1024 }}{% endif %}"            # 4MB or 128KB
  read_rnd_buffer_size: "{% if ansible_memtotal_mb >= 16 * 1024 %}{{ 4 * 1024 * 1024 }}{% else %}{{ 256 * 1024 }}{% endif %}"        # 4MB or 256KB
  join_buffer_size: "{% if ansible_memtotal_mb >= 16 * 1024 %}{{ 4 * 1024 * 1024 }}{% else %}{{ 256 * 1024 }}{% endif %}"            # 4MB or 256KB
  sort_buffer_size: "{% if ansible_memtotal_mb >= 16 * 1024 %}{{ 4 * 1024 * 1024 }}{% else %}{{ 256 * 1024 }}{% endif %}"            # 4MB or 256KB
  sync_binlog: 0
pxc_general_settings: "{{ percona_cluster_general_settings | default({}) }}"
__pxc_combined_general_settings: "{{ __pxc_defaults_general_settings | combine(pxc_general_settings, recursive=True) }}"
