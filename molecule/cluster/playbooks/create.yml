---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}"
  tasks:
    - name: Create molecule instance(s)
      lxd_container:
        name: "{{ item.name }}"
        state: started
        source:
          type: "{{ item.source.type | default('image') }}"
          mode: "{{ item.source.mode | default('pull') }}"
          server: >-
            {{ item.source.server | default('https://images.linuxcontainers.org') }}
          protocol: "{{ item.source.protocol | default('lxd') }}"
          alias: "{{ item.source.alias }}"
        profiles: ["default"]
        wait_for_ipv4_addresses: true
        timeout: 600
      loop: "{{ molecule_yml.platforms }}"

    - name: Create host_vars each host directory
      file:
        state: "directory"
        path: >-
          {{ (molecule_yml.provisioner.inventory.links.host_vars
              ~ '/' ~ item.name) | realpath }}
        mode: "0755"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop: "{{ molecule_yml.platforms }}"

    - name: Create host_vars each host files
      copy:
        content: "{{ __host_vars | to_nice_yaml }}"
        dest: >-
          {{ (molecule_yml.provisioner.inventory.links.host_vars
              ~ '/' ~ item.name ~
              '/00-create-by-molecule.yml') | realpath }}
        mode: "0644"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      vars:
        - __host_vars: >-
            {{ { 'local_ipv4': item.name ~ '.lxd' } |
              combine(item.host_vars | default({}), recursive=True) }}
      loop: "{{ molecule_yml.platforms }}"

    - name: Disable ipv6 address on the lxdbr0 bridge
      command: >-
        lxc network set lxdbr0 ipv6.address none

    - name: Limit memory of each container
      command: >-
        lxc config set {{ item.name }} limits.memory={{ item.lxc_limit_memory }}
      when: item.lxc_limit_memory is defined
      loop: "{{ molecule_yml.platforms }}"
